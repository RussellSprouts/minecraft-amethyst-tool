'use strict';async function Sd(a,b={}){const {exports:c}=await WebAssembly.instantiate(a,b);return Object.setPrototypeOf({getBiomeSourceQuart(d,e,f,g){c.getBiomeSourceQuart(d||0n,e,f,g)}},c)}async function Td(a){ub((0,Sd)(await WebAssembly.compileStreaming(fetch(a)),{}))}const Ud=location.pathname.match(/\((.*)\)/)?.[1].replace(/\$/g,"/");if(Ud)for(const a of Ud.split(/,/g).map(b=>`../${b}`))a.endsWith(".js")?importScripts(a):a.endsWith(".wasm")?(0,Td)(a):console.error("Unknown file type",a);
const Vd=new Map;function Wd(a){Vd.set(a.event,a)}console.log("I am the worker!");Wd(rb);Wd(sb);Wd(tb);Wd(Db);Wd(Cb);let Xd="";const Yd=new Map;
async function Zd(a){if("init-worker"===a.data.event)Xd=a.data.value.name,console.log(`I'm the worker ${Xd}.`);else if("register-worker"===a.data.event){var b=a.ports[0];b.onmessage=Zd;Yd.set(a.data.value.name,b);console.log(`The worker ${Xd} now knows about ${a.data.value.name}`);b.postMessage({event:"hello",value:{from:Xd,name:a.data.value.name}})}else if("hello"===a.data.event)console.log("Received a hello!",Xd,a.data.value);else{b=Vd.get(a.data.event);if(!b)throw Error(`Unhandled event ${a.data.event}`);
var c=[];postMessage({event:a.data.event,id:a.data.id,value:await b.ia({progress(d){postMessage({event:"progress",na:a.data.event,id:a.data.id,value:d})},ra(d){c.push(...d)}},...a.data.da)},c)}}onmessage=Zd;
//# sourceMappingURL=worker.js.map
