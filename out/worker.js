'use strict';importScripts("../third_party/pako/pako.min.js","./root.js");const kd=new Map;console.log("I am the worker!");kd.set(fb.event,fb);kd.set(gb.event,gb);let ld="";const nd=new Map;
async function od(a){console.log("handling remote call",a.data,typeof importScripts);if("init-worker"===a.data.event)ld=a.data.value.name,console.log(`I'm the worker ${ld}.`);else if("register-worker"===a.data.event){var b=a.ports[0];b.onmessage=od;nd.set(a.data.value.name,b);console.log(`The worker ${ld} now knows about ${a.data.value.name}`);b.postMessage({event:"hello",value:{from:ld,name:a.data.value.name}})}else if("hello"===a.data.event)console.log("Received a hello!",ld,a.data.value);else{b=
kd.get(a.data.event);if(!b)throw Error(`Unhandled event ${a.data.event}`);var c=[];postMessage({event:a.data.event,id:a.data.id,value:await b.V({progress(d){postMessage({event:"progress",X:a.data.event,id:a.data.id,value:d})},Z(d){c.push(...d)}},...a.data.U)},c)}}onmessage=od;
//# sourceMappingURL=worker.js.map
