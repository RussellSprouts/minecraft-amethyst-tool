'use strict';(async function(){function a(y){let k=0;for(;0n!==y;)k+=Number(y&1n),y>>=1n;return k}function b(y,k){let m=H,n=J;for(let u=-8;8>=u;u++)for(let G=-8;8>=G;G++){var B=y/512-(G+.5);const S=k/512-(u+.5);B=64>B*B+S*S;$c(f,G,u,m&1n?"#abd9e9":n&1n?B?"#2c7bb6":"#ddd":"#999");m>>=1n;n>>=1n}$c(f,0,0,"yellow");f.o=!0;I.textContent=`x:${(y/512*16).toFixed(2)} z:${(k/512*16).toFixed(2)}`}(0,Nb)();const c=(0,E)("#chunkPattern",HTMLCanvasElement);c.width=512;c.height=512;const d=(0,E)("#patternLog"),
e=(0,Eb)(c.getContext("2d"),CanvasRenderingContext2D),f=new bd("#chunkPatternMap");f.o=!0;var g=["#fff","#ddd"];for(var h=0;16>h;h++)for(var l=0;16>l;l++)e.fillStyle=g[l&1^h&1],e.fillRect(32*l,32*h,32,32);const p=await (0,tb)(512).promise;for(var r of p.keys())for(var w of p.keys())r!==w&&(r&w)===r&&(p.get(r).length=0);let H=p.keys().next().value,J=p.keys().next().value;for(var C of p.keys())H&=C,J|=C,0===p.get(C).length&&p.delete(C);console.log("common",H.toString(16),"neverSeen",J.toString(16));
h=[];g=new Map;for(const [y,k]of p.entries()){l=`#${Math.floor(16777215*Math.random()).toString(16)}`;g.set(y,l);e.fillStyle=l;r=l=0;for(const {x:n,z:B}of k)e.fillRect(n,B,1,1),l+=n,r+=B;l/=k.length;r/=k.length;w=1E9;let m=C=0;for(const {x:n,z:B}of k){var z=l-n;const u=r-B;z=z*z+u*u;z<w&&(w=z,C=n,m=B)}h.push({x:C/512,z:m/512});console.log("Best point for",y,C/512,m/512,a(y),"in range")}console.log("best points",h);console.log(p);h=Array.from(p.keys());h.sort((y,k)=>{let m=512,n=512;for(const {x:u,
z:G}of p.get(y))u<m&&(m=u),G<n&&(n=G);let B=y=512;for(const {x:u,z:G}of p.get(k))u<y&&(y=u),G<B&&(B=G);return n===B?m-y:n-B});for(const y of h){h=document.createElement("span");const k=g.get(y);h.textContent=`${a(y)}\n`;h.style.color=k;h.addEventListener("mouseenter",()=>{e.fillStyle="red";let m=void 0,n=0;for(const {x:B,z:u}of p.get(y))void 0===m&&(m=B,n=u),e.fillRect(B,u,1,1);b(m,n)});h.addEventListener("mouseleave",()=>{e.fillStyle=k;for(const {x:m,z:n}of p.get(y))e.fillRect(m,n,1,1)});d.appendChild(h)}const I=
(0,E)("#hoverInfo");c.addEventListener("mousemove",y=>{const k=c.getBoundingClientRect();b((y.clientX-k.left)/(k.right-k.left)*512,(y.clientY-k.top)/(k.bottom-k.top)*512)},{passive:!0});(0,E)("#loading").style.display="none"})();
//# sourceMappingURL=afk.js.map
