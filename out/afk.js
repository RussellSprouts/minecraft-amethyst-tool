'use strict';(async function(){function a(x){let k=0;for(;0n!==x;)k+=Number(x&1n),x>>=1n;return k}function b(x,k){let m=D,n=K;for(let B=-8;8>=B;B++)for(let F=-8;8>=F;F++){var C=x/512-(F+.5);const R=k/512-(B+.5);C=64>C*C+R*R;Dc(f,F,B,m&1n?"#abd9e9":n&1n?C?"#2c7bb6":"#ddd":"#999");m>>=1n;n>>=1n}Dc(f,0,0,"yellow");f.u=!0;z.textContent=`x:${(x/512*16).toFixed(2)} z:${(k/512*16).toFixed(2)}`}(0,ub)();const c=(0,y)("#chunkPattern",HTMLCanvasElement);c.width=512;c.height=512;const d=(0,y)("#patternLog"),
e=(0,kb)(c.getContext("2d"),CanvasRenderingContext2D),f=new Fc("#chunkPatternMap");f.u=!0;var g=["#fff","#ddd"];for(var h=0;16>h;h++)for(var l=0;16>l;l++)e.fillStyle=g[l&1^h&1],e.fillRect(32*l,32*h,32,32);const v=await (0,jb)(512).promise;for(var u of v.keys())for(var r of v.keys())u!==r&&(u&r)===u&&(v.get(u).length=0);let D=v.keys().next().value,K=v.keys().next().value;for(var A of v.keys())D&=A,K|=A,0===v.get(A).length&&v.delete(A);console.log("common",D.toString(16),"neverSeen",K.toString(16));
h=[];g=new Map;for(const [x,k]of v.entries()){l=`#${Math.floor(16777215*Math.random()).toString(16)}`;g.set(x,l);e.fillStyle=l;u=l=0;for(const {x:n,z:C}of k)e.fillRect(n,C,1,1),l+=n,u+=C;l/=k.length;u/=k.length;r=1E9;let m=A=0;for(const {x:n,z:C}of k){var q=l-n;const B=u-C;q=q*q+B*B;q<r&&(r=q,A=n,m=C)}h.push({x:A/512,z:m/512});console.log("Best point for",x,A/512,m/512,a(x),"in range")}console.log("best points",h);console.log(v);h=Array.from(v.keys());h.sort((x,k)=>{let m=512,n=512;for(const {x:B,
z:F}of v.get(x))B<m&&(m=B),F<n&&(n=F);let C=x=512;for(const {x:B,z:F}of v.get(k))B<x&&(x=B),F<C&&(C=F);return n===C?m-x:n-C});for(const x of h){h=document.createElement("span");const k=g.get(x);h.textContent=`${a(x)}\n`;h.style.color=k;h.addEventListener("mouseenter",()=>{e.fillStyle="red";let m=void 0,n=0;for(const {x:C,z:B}of v.get(x))void 0===m&&(m=C,n=B),e.fillRect(C,B,1,1);b(m,n)});h.addEventListener("mouseleave",()=>{e.fillStyle=k;for(const {x:m,z:n}of v.get(x))e.fillRect(m,n,1,1)});d.appendChild(h)}const z=
(0,y)("#hoverInfo");c.addEventListener("mousemove",x=>{const k=c.getBoundingClientRect();b((x.clientX-k.left)/(k.right-k.left)*512,(x.clientY-k.top)/(k.bottom-k.top)*512)},{passive:!0});(0,y)("#loading").style.display="none"})();
//# sourceMappingURL=afk.js.map
